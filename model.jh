entity Insecte {
	
	nomInsecte String required,
    nomScienInsecte String required,
	insecteImage String,
	description TextBlob,
    cycleBio TextBlob,
	autrePlante TextBlob,
	imageCycle String,
	dateValidation Instant,
    dateAjout Instant
}

entity TypeInsecte{
	nomTypeInsecte String,
	description String
}

 entity InsecteUtile {
	
}
entity InsecteRavageur {
	
} 

entity Maladie{
	nomMaladie String,
    description TextBlob,
    imagesMaladie String
}
entity Herbe{
	nomHerbe String,
    description TextBlob,
    imagesHerbe String
}
entity Culture {
	nomCulture String required,
	imageCulture String,
	paysCulture String
}
entity TypeCulture{
	nomTypeCulture String,
	description String
}
entity ZoneGeo{
	pays String,
	region String
}
entity Attaque {

    description TextBlob,
    flag Boolean,
    localisation Localisation
	dateValidation Instant,
    dateAjout Instant,
	imagesAttaque String
}
entity MethodeLutte{
	type String,
	methodeCulturale TextBlob,
	traitement TextBlob,
    imageML String,
    video String
}

entity ImageEnvoye {
urlImage String,
dateDAjout Instant,
dateValidation Instant,
flag Boolean
    
}
entity Agriculteur{
	specialite String
}
entity Chercheur{
	institut String,
    pays String,
    specialite String
}
entity Famille{
	nomFamille String,
	description TextBlob,
	imageFamiile String

}
entity Ordre{
	nomOrdre String,
	description TextBlob,
	imageOrdre String
}
entity Demo{
	imageDemo String,
    audio String,
    videoDemo String
}

entity TypeDegat {
    
	typeDeg String required
}
enum Localisation {
	FEUILLES,
    FRUITS,
    FLEURES,
    TIGE,
    RACINE
}
relationship ManyToMany{
	Culture{cultureMaladie} to Maladie{culture}
}
relationship ManyToMany{
	Culture{cultureInsecteUtile} to InsecteUtile{culture}
}
relationship ManyToMany{
	Culture{culturesRavageur} to InsecteRavageur{culture}
}
relationship ManyToMany{
	Culture{cultureHerbe} to Herbe{culture}
}
relationship OneToOne{
	Culture{typeCulture} to TypeCulture
}
relationship ManyToMany{
	Culture{zone} to ZoneGeo{culture}
}
relationship OneToOne{
	Insecte{typeInsecte} to TypeInsecte
}
relationship  OneToOne{
	InsecteRavageur{typeRav} to Insecte
}
relationship  OneToOne{
	InsecteUtile{typeUtil} to Insecte
}
relationship OneToOne{
	Agriculteur{pays} to ZoneGeo
}
relationship  OneToOne{
	InsecteRavageur{ravageurML} to MethodeLutte

}
relationship OneToOne{
		Herbe{herbeML} to MethodeLutte
}
relationship OneToOne{
	Maladie{maladieML} to MethodeLutte
}
relationship OneToMany {
	InsecteRavageur{ravageur} to Attaque
}
relationship OneToMany {
	Culture{attaque} to Attaque
}
relationship OneToMany {
	Chercheur{ajoutRavageur} to InsecteRavageur
}
relationship OneToMany {
	Chercheur{ajoutInsUtile} to InsecteUtile
}
relationship OneToMany{
	Chercheur{ajoutAttaque} to Attaque
}
relationship OneToMany{
		Ordre{ordre} to Famille
}
relationship OneToMany{
	Famille{familleRavageur} to InsecteRavageur
    Famille{familleInseUtile} to InsecteUtile
}
relationship OneToMany{
	TypeDegat{degat} to Attaque
}
relationship OneToMany{
	Agriculteur{agriculteur} to ImageEnvoye
}
relationship OneToOne{
	Agriculteur{user} to User
}
relationship OneToOne{
	Chercheur{user} to User
}

dto * with mapstruct 
service all with serviceImpl 